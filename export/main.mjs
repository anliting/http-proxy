import http from"http";import url from"url";import http2 from"http2";function httpProxy(t,e,o,r,n){return new Promise(((s,p)=>{let i,h={"x-forwarded-for":t.socket.remoteAddress};for(let e in t.headers)"host"!=e&&(h[e]=t.headers[e]);try{i=new url.URL(t.url,"http://a")}catch(t){return e.end()}t.pipe(http.request({host:o,port:r,method:t.method,path:t.url,headers:h,agent:n},(t=>{e.writeHead(t.statusCode,t.headers),t.pipe(e)})).on("error",(t=>{if(t.code="ECONNREFUSED")return e.writeHead(500),e.end();p(t)}))).on("end",(()=>{s()}))}))}let proxy={};function Pool(t,e){this._authority=t,this._connectOption=e}Pool.prototype.end=function(){return new Promise((t=>{if(!this._client||this._client.closed||this._client.destroyed)return t();this._client.close(t)}))},Pool.prototype.proxy=function(t,e){let o,r={":method":e[":method"],":path":e[":path"]};for(let t in e)":"!=t[0]&&(r[t]=e[t]);(!this._client||this._client.closed||this._client.destroyed)&&(this._client=http2.connect(this._authority,this._connectOption));let n=e=>{t.closed||o||(o=1,t.respond({":status":503}),t.end()),["ECONNREFUSED"].includes(e.code)||console.error(e)};this._client.on("error",n);let s=this._client.request(r).on("error",(e=>{t.closed||o||(o=1,t.respond({":status":503}),t.end()),"ERR_HTTP2_STREAM_CANCEL"!=e.code&&console.error(e)})).on("response",(e=>{if(!t.closed&&!o){o=1;let r={":status":e[":status"]};for(let t in e)":"!=t[0]&&(r[t]=e[t]);t.respond(r),s.pipe(t)}})).on("end",(()=>{this._client.off("error",n)}))},proxy.Pool=Pool;var h1specificHeader=new Set(["connection","host","te","transfer-encoding"]);function http2HttpProxy(t,e,o,r,n,s={}){let p={"x-forwarded-for":t.session.socket.remoteAddress};for(let t in e)":"!=t[0]&&(p[t]=e[t]);t.pipe(http.request({host:o,port:r,method:e[":method"],path:e[":path"],headers:p,agent:n},(e=>{if(t.destroyed)return;let o={":status":e.statusCode};for(let t in e.headers)h1specificHeader.has(t)||(o[t]=e.headers[t]);if(s.reverse&&o.location){let t=new URL(o.location,"http://a");o.location=t.pathname}t.respond(o),e.pipe(t)})).on("error",(e=>{["ECONNREFUSED","ETIMEDOUT"].includes(e.code)||console.error(e),t.destroyed||(t.respond({":status":500}),t.end())})))}function httpHttp2Proxy(t,e,o,r){let n={":method":t.method,":path":t.url};for(let e in t.headers)h1specificHeader.has(e)||(n[e]=t.headers[e]);let s=http2.connect(o,r).on("error",(t=>{e.writeHead(503,{}),e.end(),console.error(t)})),p=s.request(n).on("error",(t=>{e.writeHead(503,{}),e.end(),"ERR_HTTP2_STREAM_CANCEL"!=t.code&&console.error(t)})).on("response",(t=>{let o={};for(let e in t)":"!=e[0]&&(o[e]=t[e]);e.writeHead(t[":status"],o),p.pipe(e),s.close()}))}var main={http:httpProxy,http2:proxy,http2Http:http2HttpProxy,httpHttp2:httpHttp2Proxy};export{main as default,httpProxy as http,proxy as http2,http2HttpProxy as http2Http,httpHttp2Proxy as httpHttp2};